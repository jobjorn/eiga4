generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id          Int           @id @default(autoincrement())
    sub         String        @unique
    name        String
    email       String        @unique
    picture     String?
    role        Role          @default(USER)
    lists       List[]
    partnering  Partnership[] @relation("partnering")
    partnered   Partnership[] @relation("partnered")
    Vote        Vote[]
    readyToVote Boolean       @default(false)

    @@map("users")
}

model Partnership {
    id             Int     @id @default(autoincrement())
    partnering     User    @relation("partnering", fields: [partneringSub], references: [sub])
    partneringSub  String  @unique @map("partnering_sub") // relation scalar field
    partnered      User?   @relation("partnered", fields: [partneredSub], references: [sub])
    partneredSub   String? @map("partnered_sub") // relation scalar field
    partneredEmail String? @map("partnered_email")

    partneredAccepted Boolean @default(false)

    @@map("partnerships")
}

enum Role {
    USER
    MODERATOR
    ADMIN
}

model Name {
    id          Int     @id @default(autoincrement())
    name        String  @unique
    description String?
    lists       List[]
    winners     Vote[]  @relation("winner")
    losers      Vote[]  @relation("loser")

    @@map("names")
}

model List {
    id       Int     @id @default(autoincrement())
    user     User    @relation(fields: [userSub], references: [sub])
    userSub  String  @map("user_sub") // relation scalar field
    name     Name    @relation(fields: [nameId], references: [id])
    nameId   Int     @map("name_id") // relation scalar field
    subarray String?
    position Int

    @@unique([userSub, nameId])
    @@map("lists")
}

model Vote {
    id       Int    @id @default(autoincrement())
    user     User   @relation(fields: [userSub], references: [sub])
    userSub  String @map("user_sub") // relation scalar field
    winner   Name   @relation("winner", fields: [winnerId], references: [id])
    winnerId Int    @map("winner_id") // relation scalar field
    loser    Name   @relation("loser", fields: [loserId], references: [id])
    loserId  Int    @map("loser_id") // relation scalar field

    @@map("votes")
}
